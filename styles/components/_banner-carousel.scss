.banner-carousel {
  $slider-gutter: 6px;

  position: relative;

  #tns1 {
    .slider-item {
      transition: width 150ms ease-in-out;
    }

    > .tns-slide-active ~ .tns-slide-active {
      // NOTE: style 보충할 것
    }
  }

  .banner-slider {
    overflow: hidden;
    border-radius: 5px;
  }

  .banner-card {
    position: relative;
    display: block;
    height: 343px;
    overflow: hidden;
    border-radius: 5px;

    .banner-image {
      height: 100%;

      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }

    .banner-content {
      @include column-flexbox(end, start);
      @include pos-center-x;
      bottom: 0;
      width: 100%;
      height: 200px;
      padding: 22px;
      padding-left: 16px;

      .badge-white {
        margin-bottom: 8px;
      }

      .title,
      .desc {
        @include line-clamp(2);
        color: $white;
      }

      .title {
        @include text-style(26);
        margin-bottom: 4px;
        font-weight: 700;
      }

      .desc {
        @include text-style(14);
        margin-bottom: 8px;
      }
    }
  }

  .slider-controls {
    display: none;
  }

  @include responsive('T') {
    .banner-card {
      height: 400px;

      .banner-content {
        height: 240px;
        padding: 46px;
        padding-left: 40px;

        .title {
          @include text-style(32);
        }

        .desc {
          @include text-style(16);
        }
      }
    }

    .slider-controls {
      @include pos-center-y;
      @include flexbox(between);
      width: 100%;

      .control-button {
        @include flexbox;
        width: 40px;
        font-size: 16px;
        color: $primary;
        background-color: $white;
        border: 1px solid $border;
        border-radius: 50%;
        box-shadow: 2px 4px 8px rgba($black, 0.06);

        &:hover > i {
          opacity: 0.4;
        }

        &:active > i {
          color: $blue;
        }

        &.is-prev {
          transform: translateX(-50%) rotate(180deg);
        }

        &.is-next {
          transform: translateX(50%);
        }

        i {
          transition: opacity 150ms ease-in-out;
        }
      }
    }
  }
}
